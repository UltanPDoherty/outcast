library(devtools)
use_r("idioClust.R")
use_r("get_mahala_ks.R")
document()
create_package("C:/Users/Administrator/OneDrive - Trinity College Dublin/PhD/Programming/idioClust")
document()
document()
document()
load_all()
idioClust(iris[, -5], 3, 25)
idioClust(as.matrix(iris[, -5]), 3, 25)
as.matrix(iris[, -5])
idioClust(as.matrix(iris[, -5]), 3, 25)
idioClust(as.matrix(iris[, -5]), 3, 25)
load_all()
idioClust(as.matrix(iris[, -5]), 3, 25)
load_all()
idioClust(as.matrix(iris[, -5]), 3, 25)
idioClust(as.matrix(iris[, -5]), 3, 5)
load_all()
idioClust(as.matrix(iris[, -5]), 3, 5)
sorted_scaled_mahalas_g
beta_cdf_g <- pbeta(sorted_scaled_mahalas_g,
var_num / 2, (n_g - var_num - 1) / 2)
sorted_scaled_mahalas_g
beta_cdf_g <- pbeta(sorted_scaled_mahalas_g,
var_num / 2, (n_g - var_num - 1) / 2)
beta_cdf_g <- pbeta(sorted_scaled_mahalas_g,
var_num / 2, (n_g - var_num - 1) / 2)
sorted_scaled_mahalas_g
beta_cdf_g <- pbeta(sorted_scaled_mahalas_g,
var_num / 2, (n_g - var_num - 1) / 2)
sorted_scaled_mahalas_g
beta_cdf_g <- pbeta(sorted_scaled_mahalas_g,
var_num / 2, (n_g - var_num - 1) / 2)
idioClust(as.matrix(iris[, -5]), 3, 5)
sorted_scaled_mahalas_g
plot(density(x))
mu_g
plot(density(x[, 1]))
plot(density(x[, 2]))
plot(density(x[, 3]))
plot(density(x[, 4]))
z_g
out <- idioClust(as.matrix(iris[, -5]), 3, 0)
q
load_all()
out <- idioClust(as.matrix(iris[, -5]), 3, 0)
plot(iris[, 1:2])
plot(iris[, 1:2], col = out$oGMM_labels)
out <- idioClust(as.matrix(iris[, -5]), 3, 3)
plot(iris[, 1:2], col = out$oGMM_labels)
plot(iris[, 1:2], col = out$oGMM_labels + 1)
plot(faithful)
out <- idioClust(faithful, 2, 3)
out <- idioClust(as.matrix(faithful), 2, 3)
plot(faithful, col = 1 + out$oGMM_labels)
out <- idioClust(as.matrix(faithful), 2, 50)
plot(faithful, col = 1 + out$oGMM_labels)
document()
document()
document()
?idioClust
load_all()
?idioClust
load_all()
?idioClust
document()
?idioClust
document()
faithful_idio <- idioClust(faithful, G = 2, max_out)
faithful_idio <- idioClust(faithful, G = 2, max_out = 20)
plot(faithful, col = faithful_idio$oGMM_labels)
faithful_idio <- idioClust(faithful, G = 2, max_out = 20)
par(mfrow = c(1, 2))
plot(faithful_idio$comparisons, type = "l)
abline(v = faithful_idio$outlier_num)
faithful_idio <- idioClust(faithful, G = 2, max_out = 20)
par(mfrow = c(1, 2))
plot(faithful_idio$comparisons, type = "l")
abline(v = faithful_idio$outlier_num)
plot(faithful, col = faithful_idio$oGMM_labels)
par(mfrow = c(1, 1))
faithful_idio <- idioClust(faithful, G = 2, max_out = 20, seed = 123)
par(mfrow = c(1, 2))
plot(faithful_idio$comparisons, type = "l")
abline(v = faithful_idio$outlier_num)
plot(faithful, col = faithful_idio$oGMM_labels)
par(mfrow = c(1, 1))
faithful_oclust <- oclust::oclust(faithful, maxO = 20, G = 2, seed = 123)
?oclust::oclust
faithful_oclust <- oclust::oclust(faithful, maxO = 20, G = 2)
faithful_oclust <- oclust::oclust(faithful, maxO = 10, G = 2)
faithful_oclust <- oclust::oclust(faithful, maxO = 10, G = 2, pprogress = TRUE)
faithful_oclust <- oclust::oclust(faithful, maxO = 10, G = 2, verb = TRUE)
plot(faithful_oclust$KL)
plot(faithful_oclust$KL, type = "l")
faithful_oclust <- oclust::oclust(faithful, maxO = 20, G = 2, verb = TRUE)
plot(faithful_oclust$KL, type = "l")
abline(min(faithful_oclust$KL))
abline(v = min(faithful_oclust$KL))
min(faithful_oclust$KL)
abline(v = which.min(faithful_oclust$KL))
plot(faithful, col = faithful_oclust$outliers)
plot(faithful, col = seq_len(nrow(faithful)) %in% faithful_oclust$outliers)
plot(faithful, col = 1 + (seq_len(nrow(faithful)) %in% faithful_oclust$outliers))
plot(faithful, col = faithful_idio$oGMM_labels)
document()
check()
?pbeta
use_mit_license()
use_mit_license()
check()
usethis::use_import_from("mixture", "gpcm")
?use_this::use_import_from
?usethis::use_import_from
usethis::use_import_from("spatstat.geom", "ewcdf")
check()
document()
?idioClust
?idioClust-package
document()
check()
check()
document()
?idioClust
?idioclust
document()
?idioclust
?idioClust
document()
?idioClust
document()
?idioClust
