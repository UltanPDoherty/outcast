load_all()
ombc_s1n_123m300 <- ombc_gmm(
x = s1n,
comp_num = 15,
max_out = 300,
mnames = "VVV",
seed = 123,
reinit_interval = 10,
print_interval = 10
)
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
plot(x, col = mix$map, main = paste0(i, ": ", round(distrib_diffs[i], 5)))
matplot(0:1000, ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: CDF Difference Quartiles")
abline(v = apply(ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
abline(v = apply(ombc_s1n_123m1000$dd_percentile_mat[301:1000, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
abline(v = 300 + apply(ombc_s1n_123m1000$dd_percentile_mat[301:1000, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
matplot(0:1000, ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: CDF Difference Quartiles")
abline(v = apply(ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
abline(v = 300 + apply(ombc_s1n_123m1000$dd_percentile_mat[301:1000, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
matplot(0:1000, ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: CDF Difference Quartiles")
abline(v = 300 + apply(ombc_s1n_123m1000$dd_percentile_mat[301:1000, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
abline(v = apply(ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 262), pch = 20)
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 612), pch = 20)
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 612), pch = 20)
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 612), pch = 20,
main = "s1n: median CDF difference")
par(mfrow = c(2, 2))
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 612), pch = 20,
main = "s1n: median CDF difference")
par(mfrow = c(2, 1))
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 612), pch = 20,
main = "s1n: median CDF difference")
matplot(0:1000, ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: CDF Difference Quartiles")
abline(v = apply(ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
par(mfrow = c(1, 2))
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 612), pch = 20,
main = "s1n: median CDF difference")
matplot(0:1000, ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: CDF Difference Quartiles")
abline(v = apply(ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
lines(0:1000, ombc_s1n_123m1000$distrib_diffs)
par(mfrow = c(1, 2))
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m1000$outlier_bool | ombc_s1n_123m1000$outlier_rank > 612), pch = 20,
main = "s1n: median CDF difference")
matplot(0:1000, ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: Quartiles + Mean (Black)")
abline(v = apply(ombc_s1n_123m1000$dd_percentile_mat[, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
lines(0:1000, ombc_s1n_123m1000$distrib_diffs)
abline(v = ombc_s1n_123m1000$outlier_num)
par(mfrow = c(1, 2))
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m2000$outlier_bool | ombc_s1n_123m2000$outlier_rank > 612), pch = 20,
main = "s1n: median CDF difference")
matplot(0:2000, ombc_s1n_123m2000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: Quartiles + Mean (Black)")
abline(v = apply(ombc_s1n_123m2000$dd_percentile_mat[, c(26, 51, 76, 101)], 2, which.min) - 1,
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)))
lines(0:2000, ombc_s1n_123m2000$distrib_diffs)
abline(v = ombc_s1n_123m2000$outlier_num)
matplot(0:2000, ombc_s1n_123m2000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: Quartiles + Mean (Black)")
par(mfrow = c(1, 1))
matplot(0:2000, ombc_s1n_123m2000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: Quartiles + Mean (Black)")
abline(v = 300)
abline(v = 320)
abline(v = 330)
abline(v = 340)
matplot(0:2000, ombc_s1n_123m2000$dd_percentile_mat[, c(26, 51, 76, 101)], type = "l",
col = ggokabeito::palette_okabe_ito(order = c(1, 2, 3, 7)), lty = "solid",
ylab = "CDF difference", main = "s1n: Quartiles + Mean (Black)")
abline(v = 340)
abline(v = 350)
plot(0:2000, ombc_s1n_123m2000$beta_median_diffs, type = "l")
abline(v = 350)
abline(v = 6120)
abline(v = 612)
abline(v = 650)
abline(v = 670)
abline(v = 675)
ombc_s1n_123m1000med <- readRDS(paste0(folder, "/outlierMBC/ombc_s1n_123m1000med.rds"))
plot(0:1000, ombc_s1n_123m1000med$distrib_diffs, type = "l", main = "Median", ylab = "")
abline(v = ombc_s1n_123m1000med$outlier_num)
matplot(0:1000, ombc_s1n_123m1000med$ksp_mat, type = "l", ylim = c(0, 0.1))
palette(paletteer::paletteer_d("colorBlindness::paletteMartin"))
plot(
s1n,
col = ombc_s1n_123m1000med$labels + 1,
pch = 1 + (ombc_s1n_123m1000med$labels == 0),
main = "Median"
)
mclust::adjustedRandIndex(s1n_label, ombc_s1n_123m1000med$labels)
ombc_s1n_123m1000med$outlier_num
ombc_s1n_123m1000med$loglike
plot(0:1000, ombc_s1n_123m1000med$loglike)
plot(0:1000, ombc_s1n_123m1000med$loglike, type = "l")
mixture::e_step(s1n[ombc_s1n_123m1000med$outlier_bool, ], ombc_s1n_123m1000med$final_gmm)
mixture::e_step(as.matrix(s1n[ombc_s1n_123m1000med$outlier_bool, ]), ombc_s1n_123m1000med$final_gmm)
?mixture::e_step
mixture::e_step(as.matrix(s1n[ombc_s1n_123m1000med$outlier_bool, ]), ombc_s1n_123m1000med$final_gmm$best_model)
ombc_s1n_123m1000med_estep <- mixture::e_step(
as.matrix(s1n[ombc_s1n_123m1000med$outlier_bool, ]),
ombc_s1n_123m1000med$final_gmm$best_model
)
ombc_s1n_123m1000med_estep$z
str(ombc_s1n_123m1000med_estep)
plot(s1n, col = ombc_s1n_123m1000med_estep$map)
plot(s1n[ombc_s1n_123m1000med$outlier_bool, ], col = ombc_s1n_123m1000med_estep$map)
plot(s1n[ombc_s1n_123m1000med$outlier_bool, ], col = ombc_s1n_123m1000med_estep$map, pch = 20)
ombc_s1n_123m1000med$final_gmm$best_model
ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$mus
ombc_s1n_123m1000med_dens <- matrix(
nrow = ombc_s1n_123m1000med$outlier_num, ncol = 15
)
?mclust::dens
mu <- Reduce(cbind, ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$mus)
mu
sigma <- Reduce(abind, ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$sigs)
sigma <- Reduce(abind::abind, ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$sigs)
sigma
?abind::abind
sigma <- Reduce(function(x) abind::abind(x, along = 3), ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$sigs)
sigma <- Reduce(function(x) {abind::abind(x, along = 3)}, ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$sigs)
sigma <- Reduce(f = function(init, x) {abind::abind(x, along = 3)}, ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$sigs)
sigma
ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$sigs
sigma <- abind::abind(ombc_s1n_123m1000med$final_gmm$best_model$model_obj[[1]]$sigs, along = 3)
sigma
pro <- ombc_s1n_123m1000med$final_gmm$model_objs[[1]]$pi_gs
pro
ombc_s1n_123m1000med_dens <- mclust::dens(
s1n[ombc_s1n_123m1000med$outlier_bool, ],
"VVV",
list(pro = pro, mean = mu, variance = sigma),
logarithm = TRUE
)
?mclust::mclustVariance
mclust::mclustVariance("VVV", 2, 15)
?mclust::dens
ombc_s1n_123m1000med$outlier_num
library(mclust)
?Mclust
s1n_mclust612 <- Mclust(s1n[ombc_s1n_123m1000med$outlier_bool, ], modelNames = "VVV", G = 15)
s1n_mclust612 <- Mclust(s1n[!ombc_s1n_123m1000med$outlier_bool, ], modelNames = "VVV", G = 15)
plot(s1n[!ombc_s1n_123m1000med$outlier_bool, ], col = s1n_mclust612$classification)
s1n_mclust612_outdens <- densityMclust(s1n[ombc_s1n_123m1000med$outlier_bool, ], s1n_mclust612)
?densityMclust
?dens
s1n_mclust612_outdens <- dens(s1n[ombc_s1n_123m1000med$outlier_bool, ], "VVV", s1n_mclust612$parameters)
s1n_mclust612_outdens
plot(s1n_mclust612_outdens)
plot(x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool], y = s1n_mclust612_outdens)
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens
)
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool]
)
sum(s1n_mclust612_outdens < 0.01)
sum(s1n_mclust612_outdens < 0.001)
sum(s1n_mclust612_outdens == 0)
sum(s1n_mclust612_outdens < 1 e-12)
sum(s1n_mclust612_outdens < 1e-12)
sum(s1n_mclust612_outdens < 1e-13)
hist(s1n_mclust612_outdens)
sum(s1n_mclust612_outdens < 1e-14)
min(s1n_mclust612_outdens)
sum(s1n_mclust612_outdens < 1e-15)
sum(s1n_mclust612_outdens < 1e-16)
sum(s1n_mclust612_outdens < 1e-17)
sum(s1n_mclust612_outdens < 1e-18)
?dens
s1n_mclust612_outdens <- dens(
s1n[ombc_s1n_123m1000med$outlier_bool, ], "VVV", s1n_mclust612$parameters,
logarithm = TRUE
)
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main =
)
sum(s1n_mclust612_outdens < 0)
sum(s1n_mclust612_outdens < -100)
hist(s1n_mclust612_outdens)
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of outliers from median CDF model"
)
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
abline(v = 290)
plot(s1n, col = 1 + !(!ombc_s1n_123m1000med$outlier_bool | ombc_s1n_123m1000med$outlier_rank < 290))
plot(s1n, col = 1 + !(!ombc_s1n_123m1000med$outlier_bool | ombc_s1n_123m1000med$outlier_rank > 290))
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m1000med$outlier_bool | ombc_s1n_123m1000med$outlier_rank > 290))
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
palette(paletteer::paletteer_d("colorBlindness:paletteMartin"))
palette(paletteer::paletteer_d("colorBlindness::paletteMartin"))
plot(
x = ombc_s1n_123m1000med$outlier_rank[ombc_s1n_123m1000med$outlier_bool],
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
abline(v = 290)
palette(ggokabeito::palette_okabe_ito())
plot(s1n, col = 1 + !(!ombc_s1n_123m1000med$outlier_bool | ombc_s1n_123m1000med$outlier_rank > 290))
sum(s1n_mclust612_outdens < -100)
sum(s1n_mclust612_outdens < -50)
sum(s1n_mclust612_outdens < -40)
sum(s1n_mclust612_outdens < -10)
sum(s1n_mclust612_outdens < -20)
sum(s1n_mclust612_outdens < -40)
sum(s1n_mclust612_outdens < -30)
s1n_mclust612 <- Mclust(s1n, modelNames = "VVV", G = 15)
s1n_mclust612 <- Mclust(s1n[!ombc_s1n_123m1000med$outlier_bool, ], modelNames = "VVV", G = 15)
s1n_mclust612_outdens <- dens(
s1n, "VVV", s1n_mclust612$parameters,
logarithm = TRUE
)
palette(paletteer::paletteer_d("colorBlindness::paletteMartin"))
plot(
x = ombc_s1n_123m1000med$outlier_rank,
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
plot(
# x = ombc_s1n_123m1000med$outlier_rank,
y = s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
plot(
# x = ombc_s1n_123m1000med$outlier_rank,
s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
palette(paletteer::paletteer_d("colorBlindness::paletteMartin"))
plot(
# x = ombc_s1n_123m1000med$outlier_rank,
s1n_mclust612_outdens,
col = 1 + s1n_label[ombc_s1n_123m1000med$outlier_bool],
main = "Log mixture density of median CDF outliers"
)
plot(
x = ombc_s1n_123m1000med$outlier_rank,
y = s1n_mclust612_outdens,
col = 1 + s1n_label,
main = "Log mixture density of median CDF outliers"
)
plot(
# x = ombc_s1n_123m1000med$outlier_rank,
s1n_mclust612_outdens,
col = 1 + s1n_label,
main = "Log mixture density of median CDF outliers"
)
s1n_mclust612_outdens[!ombc_s1n_123m1000med$outlier_bool]
plot(density(s1n_mclust612_outdens[!ombc_s1n_123m1000med$outlier_bool]))
s1n_mclust612_outdens <- dens(
s1n, "VVV", s1n_mclust612$parameters,
logarithm = FALSE
)
plot(density(s1n_mclust612_outdens[!ombc_s1n_123m1000med$outlier_bool]))
plot(
# x = ombc_s1n_123m1000med$outlier_rank,
s1n_mclust612_outdens,
col = 1 + s1n_label,
main = "Log mixture density of median CDF outliers"
)
plot(density(s1n_mclust612_outdens[!ombc_s1n_123m1000med$outlier_bool]))
s1n_mclust612_outdens <- dens(
s1n, "VVV", s1n_mclust612$parameters,
logarithm = TRUE
)
palette(paletteer::paletteer_d("colorBlindness::paletteMartin"))
plot(
# x = ombc_s1n_123m1000med$outlier_rank,
s1n_mclust612_outdens,
col = 1 + s1n_label,
main = "Log mixture density of median CDF outliers"
)
abline(v = 290)
plot(density(s1n_mclust612_outdens[!ombc_s1n_123m1000med$outlier_bool]))
plot(density(s1n_mclust612_outdens[ombc_s1n_123m1000med$outlier_bool]))
hist(density(s1n_mclust612_outdens[!ombc_s1n_123m1000med$outlier_bool]))
hist(s1n_mclust612_outdens[!ombc_s1n_123m1000med$outlier_bool])
hist(s1n_mclust612_outdens[ombc_s1n_123m1000med$outlier_bool])
?mixture::e_step
?mixture::e_step
ultan <- rnorm(1000)
max(ultan)
quantile(ultan, 1)
? %*%
?array
check()
library(devtools)
check()
check()
use_import_from("stats", "quantile")
check()
gmm1 <- simulate_gmm(
n = c(2000, 1000, 1000),
mu = list(c(-1, 0), c(+1, -1), c(+1, +1)),
sigma = list(diag(c(0.2, 4 * 0.2)), diag(c(0.2, 0.2)), diag(c(0.2, 0.2))),
outlier_num = 40,
seed = 123,
crit_val = 0.9999,
range_multiplier = 1.5
)
ombc_gmm1 <- ombc_gmm(gmm1[, 1:2], 3, 80)
load_all()
ombc_gmm1 <- ombc_gmm(gmm1[, 1:2], 3, 80)
dim(t(prop))
check()
load_all()
check()
check()
load_all()
check()
check()
Rprof()
Rprof(ombc_gmm(gmm1[, 1:2], 3, 80))
?Rprof
Rprof()
ombc_gmm(gmm1[, 1:2], 3, 80)
Rprof(NULL)
summaryRprof()
profvis({ombc_gmm(gmm1[, 1:2], 3, 80)})
profvis::profvis({ombc_gmm(gmm1[, 1:2], 3, 80)})
?mixture::gpcm
ombc_gmm1 <- ombc_gmm(gmm1[, 1:2], 3, 80)
load_all()
ombc_gmm1 <- ombc_gmm(gmm1[, 1:2], 3, 80)
ombc_gmm1$final_gmm[[1]]$model_objs[[1]]$log_dets
ombc_gmm1$final_gmm[[1]]$model_objs[[1]]
load_all()
ombc_gmm1_2 <- ombc_gmm(gmm1[, 1:2], 3, 80)
(ombc_gmm1$min_dens != ombc_gmm1_2$min_dens)
max(ombc_gmm1$min_dens - ombc_gmm1_2$min_dens)
profvis::profvis({ombc_gmm(gmm1[, 1:2], 3, 80)})
Rprof()
ombc_gmm(gmm1[, 1:2], 3, 80)
Rprof(NULL)
summaryRprof()
folder <- paste0(
"C:/Users/Administrator/OneDrive - Trinity College Dublin/PhD/Programming",
"/outlierMBC_demos/9dataset_comparison"
)
s1 <- read.table(
paste0(folder, "/uef_sipu_data/s1.txt")
)
s1_var_num <- ncol(s1)
s1_obs_num <- nrow(s1)
s1_noise_num <- round(0.07 * s1_obs_num)
folder <- paste0(
"C:/Users/Administrator/OneDrive - Trinity College Dublin/PhD/Programming",
"/outlierMBC_demos"
)
s1 <- read.table(
paste0(folder, "/uef_sipu_data/s1.txt")
)
s1_var_num <- ncol(s1)
s1_obs_num <- nrow(s1)
s1_noise_num <- round(0.07 * s1_obs_num)
s1_mean <- s1_spread <- s1_noise_mins <- s1_noise_maxs <- c()
s1_noise <- matrix(nrow = s1_noise_num, ncol = s1_var_num)
set.seed(123)
for (p in seq_len(ncol(s1))) {
s1_mean[p] <- mean(s1[, p])
s1_spread[p] <- max(
c(abs(min(s1[, p]) - s1_mean[p]), abs(min(s1[, p]) - s1_mean[p]))
)
s1_noise_mins[p] <- s1_mean[p] - 2 * s1_spread[p]
s1_noise_maxs[p] <- s1_mean[p] + 2 * s1_spread[p]
s1_noise[, p] <- runif(s1_noise_num, s1_noise_mins[p], s1_noise_maxs[p])
}
s1n <- rbind(s1, as.data.frame(s1_noise))
s1_label <- read.table(
paste0(folder, "/uef_sipu_data/s-originals/s1-label.pa"), skip = 5
) |> dplyr::pull()
s1n_label <- c(s1_label, rep(0, s1_noise_num))
s1_list <- split(s1, s1_label)
s1_means <- lapply(s1_list, colMeans)
s1_covariances <- lapply(s1_list, cov)
s1_counts <- as.numeric(table(s1_label))
set.seed(123)
u1 <- matrix(nrow = 0, ncol = 2)
for (k in 1:15) {
u1 <- rbind(u1, mvtnorm::rmvnorm(
n = s1_counts[k],
mean = s1_means[[k]],
sigma = s1_covariances[[k]]
))
}
u1 <- as.data.frame(u1)
u1n <- rbind(u1, s1_noise)
u1_label <- rep(1:15, s1_counts)
u1n_label <- c(u1_label, rep(0, 350))
load_all()
write.table(s1n, paste0(folder, "/s1n.txt"), row.names = F, col.names = F)
write.table(s1_label, paste0(folder, "/s1_label.txt"), row.names = F, col.names = F)
folder <- paste0(
"C:/Users/Administrator/OneDrive - Trinity College Dublin/PhD/Programming",
"/outlierMBC_demos/s1"
)
source("C:/Users/Administrator/OneDrive - Trinity College Dublin/PhD/Programming/outlierMBC_demos/s1/make_s1n_u1_u1n.R")
s1_label
length(s1_label)
length(s1)
nrow(s1)
source("C:/Users/Administrator/OneDrive - Trinity College Dublin/PhD/Programming/outlierMBC_demos/s1/make_s1n_u1_u1n.R")
