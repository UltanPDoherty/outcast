# )) +
# geom_abline(aes(intercept = 1, slope = 0), linetype = "dashed") +
# geom_abline(aes(intercept = 1, slope = 3), linetype = "dashed") +
labs(colour = "outlierMBC", shape = "Simulation")
data.frame(
outliers_removed = 0:100,
distrib_diffs = ombc_lcwm_p1g2_y_only$distrib_diffs,
outlier_num = ombc_lcwm_p1g2_y_only$outlier_num
) |>
ggplot(aes(x = outliers_removed, y = distrib_diffs)) +
geom_line() +
geom_point() +
geom_vline(aes(xintercept = outlier_num)) +
labs(x = "Number of Potential Outliers Removed")
coeffs1 <-
ombc_lcwm_p1g2_y_only$final_cwm$models[[1]]$GLModel$comp.1$model$coefficients
coeffs2 <-
ombc_lcwm_p1g2_y_only$final_cwm$models[[1]]$GLModel$comp.2$model$coefficients
lcwm_p1g2_y_only |>
ggplot(aes(
x = X1, y = Y,
colour = as.factor(ombc_lcwm_p1g2_y_only$labels),
shape = as.factor(G)
)) +
geom_point() +
ggokabeito::scale_colour_okabe_ito(order = c(9, 1, 2)) +
# geom_abline(aes(
#   intercept = coeffs1[1], slope = coeffs2[2],
#   linetype = "solid", colour = ggokabeito::palette_okabe_ito(order = 1)
# )) +
# geom_abline(aes(
#   intercept = coeffs2[1], slope = coeffs2[2],
#   linetype = "solid", colour = ggokabeito::palette_okabe_ito(order = 2)
# )) +
geom_abline(aes(intercept = 1, slope = 0), linetype = "dashed") +
geom_abline(aes(intercept = 1, slope = 3), linetype = "dashed") +
labs(colour = "outlierMBC", shape = "Simulation")
data.frame(
outliers_removed = 0:100,
distrib_diffs = ombc_lcwm_p1g2_y_only$distrib_diffs,
outlier_num = ombc_lcwm_p1g2_y_only$outlier_num
) |>
ggplot(aes(x = outliers_removed, y = distrib_diffs)) +
geom_line() +
geom_point() +
geom_vline(aes(xintercept = outlier_num)) +
labs(x = "Number of Potential Outliers Removed")
coeffs1 <-
ombc_lcwm_p1g2_y_only$final_cwm$models[[1]]$GLModel$comp.1$model$coefficients
coeffs2 <-
ombc_lcwm_p1g2_y_only$final_cwm$models[[1]]$GLModel$comp.2$model$coefficients
lcwm_p1g2_y_only |>
ggplot(aes(
x = X1, y = Y,
colour = as.factor(ombc_lcwm_p1g2_y_only$labels),
shape = as.factor(G)
)) +
geom_point() +
ggokabeito::scale_colour_okabe_ito(order = c(9, 1, 2)) +
geom_abline(
aes(intercept = coeffs1[1], slope = coeffs2[2]),
linetype = "solid", colour = ggokabeito::palette_okabe_ito(order = 1)
) +
geom_abline(
aes(intercept = coeffs2[1], slope = coeffs2[2]),
linetype = "solid", colour = ggokabeito::palette_okabe_ito(order = 2)
) +
geom_abline(aes(intercept = 1, slope = 0), linetype = "dashed") +
geom_abline(aes(intercept = 1, slope = 3), linetype = "dashed") +
labs(colour = "outlierMBC", shape = "Simulation")
coeffs <-
ombc_lcwm_p1g1_y_only$final_cwm$models[[1]]$GLModel$comp.1$model$coefficients
document()
check()
?ombc_gmm
document()
check()
lintr:::addin_lint_package()
lintr:::addin_lint_package()
styler:::style_active_pkg()
document()
library(devtools)
document()
check()
ombc_p1 <- simulate_lcwm(
n = c(1000, 1000),
mu = list(c(-1), c(+1)),
sigma = list(as.matrix(0.2), as.matrix(0.2)),
beta = list(c(1, 0), c(1, 3)),
error_sd = c(1, 1),
outlier_num = c(25, 25),
outlier_type = "x_and_y",
seed = 123,
crit_val = 0.9999,
range_multipliers = c(1.5, 2)
)
ombc_p1_lcwm <- ombc_lcwm(
xy = ombc_p1[, -3],
x = ombc_p1$X1,
y_formula = Y ~ X1,
comp_num = 2,
max_out = 100,
mnames = "V",
seed = 123,
outlier_type = "ultan"
)
document()
check()
?distrib_diff_lcwm
load_all()
gmm_p2g3 <- simulate_gmm(
n = c(2000, 1000, 1000),
mu = list(c(-1, 0), c(+1, -1), c(+1, +1)),
sigma = list(diag(c(0.2, 4 * 0.2)), diag(c(0.2, 0.2)), diag(c(0.2, 0.2))),
outlier_num = 40, seed = 123, crit_val = 0.9999,
range_multiplier = 1.5
)
ombc_gmm_p2g3 <- ombc_gmm(gmm_p2g3[, 1:2], comp_num = 3, max_out = 80)
lcwm_p1 <- simulate_lcwm(
n = c(1000, 1000),
mu = list(c(-1), c(+1)),
sigma = list(as.matrix(0.2), as.matrix(0.2)),
beta = list(c(1, 0), c(1, 3)),
error_sd = c(1, 1),
outlier_num = c(25, 25),
outlier_type = "x_and_y",
seed = 123,
crit_val = 0.9999,
range_multipliers = c(1.5, 2)
)
ombc_p1_lcwm <- ombc_lcwm(
xy = lcwm_p1[, -3],
x = lcwm_p1$X1,
y_formula = Y ~ X1,
comp_num = 2,
max_out = 100,
mnames = "V",
seed = 123
)
plot(lcwm_p1[, c("X1", "Y")], pch = ombc_p1$G + 1, col = ombc_p1_lcwm$labels)
plot(lcwm_p1[, c("X1", "Y")], pch = ombc_p1$G + 1, col = ombc_p1_lcwm$labels + 1)
load_all()
ombc_p1_lcwm <- ombc_lcwm(
xy = lcwm_p1[, -3],
x = lcwm_p1$X1,
y_formula = Y ~ X1,
comp_num = 2,
max_out = 100,
mnames = "V",
seed = 123
)
class(mu)
document()
check()
document()
check()
plot(lcwm_p1, pch = ombc_p1$G + 1, col = ombc_p1_lcwm$labels + 1)
lcwm_p1[, !G]
lcwm_p1[, !c(G)]
lcwm_p1[, -c(G)]
lcwm_p1[, -c("G")]
document()
check()
install()
?ombc_gmm
install()
?ombc_gmm
library(outlierMBC)
?ombc_gmm
remotes::install_github("UltanPDoherty/outlierMBC")
detach("package:outlierMBC", unload = TRUE)
remotes::install_github("UltanPDoherty/outlierMBC")
library(outlierMBC)
?ombc_gmm
library(outlierMBC)
?ombc_gmm
load_all()
library(devtools)
load_all()
?ombc_gmm
document()
load_all()
?ombc_gmm
document()
library(devtools)
document()
check()
document()
check()
document()
check()
document()
library(devtools)
document()
check()
library(devtools)
load_all()
remotes::install_github("UltanPDoherty/outlierMBC")
library(devtools)
load_all()
check()
load_all()
gmm <- simulate_gmm(
n = c(2000, 1000, 1000),
mu = list(c(-1, 0), c(+1, -1), c(+1, +1)),
sigma = list(diag(c(0.2, 4 * 0.2)), diag(c(0.2, 0.2)), diag(c(0.2, 0.2))),
outlier_num = 40,
seed = 123,
crit_val = 0.9999,
range_multiplier = 1.5
)
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
plot(0:80, ombc_gmm$distrib_diffs, type = "l")
abline(v = ombc_gmm$outlier_num)
plot(gmm[, c("X1", "X2")], col = ombc_gmm$labels + 1, pch = gmm$G + 1)
oclust::findGrossOuts(gmm)
abline(v = 50)
abline(v = 40)
oclust::findGrossOuts(gmm)
abline(v = 40)
abline(v = 50)
gross_outs <- oclust::findGrossOuts(gmm, elbow = 50)
oclust::findGrossOuts(gmm[!gross_outs, ])
oclust::findGrossOuts(gmm)
abline(v = 50)
gross_outs <- oclust::findGrossOuts(gmm, elbow = 50)
oclust::findGrossOuts(gmm[-gross_outs, ])
gross_outs <- oclust::findGrossOuts(gmm, elbow = 40)
oclust::findGrossOuts(gmm[-gross_outs, ])
gross_outs <- oclust::findGrossOuts(gmm, elbow = 50)
oclust::findGrossOuts(gmm[-gross_outs, ])
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80, gross_outs = gross_outs)
gross_outs <- oclust::findGrossOuts(gmm, elbow = 50) %in% seq_len(nrow(gmm))
gross_outs <- seq_len(nrow(gmm)) %in% oclust::findGrossOuts(gmm, elbow = 50)
oclust::findGrossOuts(gmm[!gross_outs, ])
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80, gross_outs = gross_outs)
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80, gross_outs = gross_outs)
plot(0:80, ombc_gmm$distrib_diffs, type = "l")
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80, gross_outs = gross_outs)
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80, gross_outs = gross_outs)
max_out
table(gmm$G, gross_outs)
oclust::findGrossOuts(gmm)
gmm <- simulate_gmm(
n = c(2000, 1000, 1000),
mu = list(c(-1, 0), c(+1, -1), c(+1, +1)),
sigma = list(diag(c(0.2, 4 * 0.2)), diag(c(0.2, 0.2)), diag(c(0.2, 0.2))),
outlier_num = 40,
seed = 123,
crit_val = 0.9999,
range_multiplier = 1.5
)
oclust::findGrossOuts(gmm)
abline(v = 50)
abline(v = 40)
abline(v = 40)
abline(v = 39)
abline(v = 37)
oclust::findGrossOuts(gmm)
abline(v = 37)
oclust::findGrossOuts(gmm)
abline(v = 36)
oclust::findGrossOuts(gmm)
abline(v = 35)
gross_outs <- seq_len(nrow(gmm)) %in% oclust::findGrossOuts(gmm, elbow = 50)
oclust::findGrossOuts(gmm[!gross_outs, ])
oclust::findGrossOuts(gmm)
abline(v = c(35, 40, 45, 50))
abline(v = c(35, 40, 45, 50, 55))
oclust::findGrossOuts(gmm, xlim = 100)
?oclust::findGrossOuts
oclust::findGrossOuts(gmm, xlim = c(0, 100))
oclust::findGrossOuts(gmm, xlim = c(0, 100))
?mixture::gpcm
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
load_all()
document()
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
nrow(z0)
outlier_num
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
plot(0:80, ombc_gmm$distrib_diffs, type = "l")
abline(v = ombc_gmm$outlier_num)
load_all()
plot(0:80, ombc_gmm$distrib_diffs, type = "l")
abline(v = ombc_gmm$outlier_num)
plot(gmm[, c("X1", "X2")], col = ombc_gmm$labels + 1, pch = gmm$G + 1)
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
nrow(min_diff_z)
load_all()
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
min_diff
min(distrib_diffs)
nrow(min_diff_z)
load_all()
ombc_gmm <- ombc_gmm(gmm[, 1:2], comp_num = 3, max_out = 80)
plot(gmm[, c("X1", "X2")], col = ombc_gmm$labels + 1, pch = gmm$G + 1)
plot(0:80, ombc_gmm$distrib_diffs, type = "l")
abline(v = ombc_gmm$outlier_num)
folder <- paste0(
"C:/Users/Administrator/OneDrive - Trinity College Dublin/PhD/Programming",
"/outlierMBC_demos/9dataset_comparison"
)
s1 <- read.table(
paste0(folder, "/uef_sipu_data/s1.txt")
)
s1_var_num <- ncol(s1)
s1_obs_num <- nrow(s1)
s1_noise_num <- round(0.07 * s1_obs_num)
s1_mean <- s1_spread <- s1_noise_mins <- s1_noise_maxs <- c()
s1_noise <- matrix(nrow = s1_noise_num, ncol = s1_var_num)
for (p in seq_len(ncol(s1))) {
s1_mean[p] <- mean(s1[, p])
s1_spread[p] <- max(
c(abs(min(s1[, p]) - s1_mean[p]), abs(min(s1[, p]) - s1_mean[p]))
)
s1_noise_mins[p] <- s1_mean[p] - s1_spread[p]
s1_noise_maxs[p] <- s1_mean[p] + s1_spread[p]
s1_noise[, p] <- runif(s1_noise_num, s1_noise_mins[p], s1_noise_maxs[p])
}
s1_noise
s1n <- rbind(s1, as.data.frame(s1_noise))
ombc_s1n_time <- system.time({
ombc_s1n <- outlierMBC::ombc_gmm(
x = s1n,
comp_num = 15,
max_out = 350,
mnames = "VVV",
seed = 123
)
})
plot(x = 0:350, y = ombc_s1n$distrib_diffs, type = "l")
load_all()
library(devtools)
load_all()
ombc_s1n_time <- system.time({
ombc_s1n <- ombc_gmm(
x = s1n,
comp_num = 15,
max_out = 350,
mnames = "VVV",
seed = 123
)
})
plot(x = 0:350, y = ombc_s1n$distrib_diffs, type = "l")
palette(ggokabeito::palette_okabe_ito(order = c(9, 1:8)))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 100))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 200))
plot(x = 0:350, y = ombc_s1n$distrib_diffs, type = "l")
ombc_s1n_time <- system.time({
ombc_s1n <- ombc_gmm(
x = s1n,
comp_num = 15,
max_out = 500,
mnames = "VVV",
seed = 123
)
})
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
palette(ggokabeito::palette_okabe_ito(order = c(9, 1:8)))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 100))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 200))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 400))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 500))
mclust::adjustedRandIndex(s1n_label == 0, ombc_s1n$labels == 0)
s1_label <- read.table(
paste0(folder, "/uef_sipu_data/s-originals/s1-label.pa"), skip = 5
) |> dplyr::pull()
s1n_label <- c(s1_label, rep(0, s1_noise_num))
table(s1n_label, ombc_s1n$labels)
?mixture::gpcm
load_all()
ombc_s1n_time <- system.time({
ombc_s1n <- ombc_gmm(
x = s1n,
comp_num = 15,
max_out = 500,
mnames = "VVV",
seed = 123
)
})
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
palette(ggokabeito::palette_okabe_ito(order = c(9, 1:8)))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 100))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 200))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 100))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 200))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 100))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 200))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 400))
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
abline(v = 40)
abline(v = 32)
abline(v = c(28, 35))
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
abline(v = c(28, 35))
abline(v = c(27, 35))
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
abline(v = c(27, 35))
abline(v = c(27, 34))
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
abline(v = c(27, 34))
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
abline(v = c(27, 33))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 28))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 35))
s1n_mix <- mixture::gpcm(as.matrix(s1n), G = 15, mnames = "VVV", seed = 123, start = 10)
table(s1n_label, s1n_mix$map)
s1n_mix <- mixture::gpcm(as.matrix(s1n), G = 15, mnames = "VVV", seed = 123, start = 20)
table(s1n_label, s1n_mix$map)
s1_mean <- s1_spread <- s1_noise_mins <- s1_noise_maxs <- c()
s1_noise <- matrix(nrow = s1_noise_num, ncol = s1_var_num)
for (p in seq_len(ncol(s1))) {
s1_mean[p] <- mean(s1[, p])
s1_spread[p] <- max(
c(abs(min(s1[, p]) - s1_mean[p]), abs(min(s1[, p]) - s1_mean[p]))
)
s1_noise_mins[p] <- s1_mean[p] - 2 * s1_spread[p]
s1_noise_maxs[p] <- s1_mean[p] + 2 * s1_spread[p]
s1_noise[, p] <- runif(s1_noise_num, s1_noise_mins[p], s1_noise_maxs[p])
}
s1n <- rbind(s1, as.data.frame(s1_noise))
ombc_s1n_time <- system.time({
ombc_s1n <- ombc_gmm(
x = s1n,
comp_num = 15,
max_out = 500,
mnames = "VVV",
seed = 123
)
})
warnings()
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
abline(v = c(27, 33))
abline(v = ombc_s1n$outlier_num
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
abline(v = ombc_s1n$outlier_num)
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 28))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 35))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 400))
plot(s1n, col = 1 + !(ombc_s1n$outlier_bool & ombc_s1n$outlier_rank < 350))
table(s1n_label, ombc_s1n$labels)
qbeta
?qbeta
load_all()
ombc_s1n_time <- system.time({
ombc_s1n <- ombc_gmm(
x = s1n,
comp_num = 15,
max_out = 500,
mnames = "VVV",
seed = 123
)
})
plot(x = 0:500, y = ombc_s1n$distrib_diffs, type = "l")
plot(s1n, col = 1 + (ombc_s1$labels != 0))
plot(s1n, col = 1 + (ombc_s1n$labels != 0))
oclust::findGrossOuts(s1n)
abline(v = 280)
abline(v = 275)
oclust::findGrossOuts(s1n)
abline(v = 275)
gross_outs <- oclust::findGrossOuts(s1n, elbow = 275)
s1n2 <- s1n[!gross_outs, ]
plot(s1n2)
s1n2 <- s1n[-gross_outs, ]
plot(s1n2)
ombc_s1n2 <- ombc_gmm(
x = s1n2,
comp_num = 15,
max_out = 500,
mnames = "VVV",
seed = 123
)
plot(x = 0:500, y = ombc_s1n2$distrib_diffs, type = "l")
abline(v = ombc_s1n2$outlier_num)
mix_s1n2 <- mixture::gpcm(
as.matrix(s1n2), G = 15, mnames = "VVV", seed = 123, start = 2
)
s1n2_label <- s1n_label[-gross_outs]
table(s1n2_label, s1n_mix$map)
table(s1n2_label, s1n2_mix$map)
table(s1n2_label, mix_s1n2$map)
plot(s1n2, s1n2_label %in% c(2, 5))
plot(s1n2, 1 + (s1n2_label %in% c(2, 5)))
plot(s1n2, 1 + (s1n2_label == 2))
plot(s1n2, col = 1 + (s1n2_label == 2))
plot(s1n2, col = 1 + (s1n2_label %in% c(2, 5)))
plot(s1n2, col = 1 + (s1n2_label %in% c(3, 9)))
plot(s1n2, col = 1 + (s1n2_label %in% c(6)))
plot(s1n2, col = 1 + (s1n2_label %in% c(6, 11)))
plot(s1n2, col = 1 + (s1n2_label %in% c(11)))
load_all()
ombc_s1n2 <- ombc_gmm(
x = s1n2,
comp_num = 15,
max_out = 500,
mnames = "VVV",
seed = 123
)
